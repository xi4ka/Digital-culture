import telebot
import json
import os
import time

from telebot.types import InlineKeyboardMarkup, InlineKeyboardButton
from telebot import types, TeleBot

from DigitalCultureBot.config import TOKEN

bot = telebot.TeleBot(TOKEN)

all_recipes_file_path = os.path.join(os.path.dirname(__file__), '..', 'txt_file', 'all_recipes.txt')
save_recipes_file_path = os.path.join(os.path.dirname(__file__), '..', 'txt_file', 'save_recipes.txt')

recipe_name = ""
all_ingredients = []
timewait = 1

@bot.callback_query_handler(func=lambda call: call.data.startswith('back_'))
def back(call):

    callback_data = call.data
    
    #0 —ç—Ç–∞–∂
    if callback_data == 'back_to_welcome':
        start_command(call.message)

    #1 —ç—Ç–∞–∂
    elif callback_data == 'back_to_save_recipe':
        show_save_recipe(call)

    #2 —ç—Ç–∞–∂
    elif callback_data == 'back_to_show_one_of_save_recipe':
        show_one_of_save_recipe(call)


    #1 —ç—Ç–∞–∂
    elif callback_data == 'back_to_doing_recipe':
        doing_recipe(call)
    
    #2 —ç—Ç–∞–∂
    elif callback_data == 'back_to_all_recipe':
        show_all_recipe(call)

    #3 —ç—Ç–∞–∂
    elif callback_data == 'back_to_show_one_of_all_recipe':
        show_one_of_all_recipe(call)

    #4 —ç—Ç–∞–∂
    elif callback_data == 'back_to_edit_all_recipe':
        edit_all_recipe(call) 



#0 —ç—Ç–∞–∂
@bot.message_handler(commands=['start'])
def start_command(message):
    try:
        bot.delete_message(message.chat.id, message.message_id)
    except Exception as e:
        pass

    markup = types.InlineKeyboardMarkup(row_width=4)
    item_save_recipe = types.InlineKeyboardButton("–í—ã–±—Ä–∞–Ω–Ω—ã–µ —Ä–µ—Ü–µ–ø—Ç—ã", callback_data='save_recipe')
    item_shope_list = types.InlineKeyboardButton("–°–ø–∏—Å–æ–∫ –ø–æ–∫—É–ø–æ–∫", callback_data='shope_list')
    item_recipe = types.InlineKeyboardButton("–†–µ—Ü–µ–ø—Ç—ã", callback_data='doing_recipe')
    item_time = types.InlineKeyboardButton("–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π", callback_data='time')

    markup.add(item_save_recipe)
    markup.add(item_shope_list)
    markup.add(item_recipe)
    markup.add(item_time)

    bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–µ—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ', reply_markup=markup)



#1 —ç—Ç–∞–∂
@bot.callback_query_handler(func=lambda call: call.data == 'save_recipe')
def show_save_recipe(call):

    global recipe_name
    recipe_name = ""

    bot.delete_message(call.message.chat.id, call.message.message_id)

    with open(save_recipes_file_path, 'r', encoding='utf-8') as file:
        recipes = json.load(file)
    if len(recipes):
        # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ä–µ—Ü–µ–ø—Ç–∞
        keyboard = InlineKeyboardMarkup()
        for recipe_name_model in recipes:
            keyboard.add(InlineKeyboardButton(recipe_name_model, callback_data=f'show_one_of_save_recipe:{recipe_name_model}'))
        
        keyboard.add(InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data='back_to_welcome'))

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π
        bot.send_message(call.message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ—Ü–µ–ø—Ç:', reply_markup=keyboard)

    else:
        sent_message = bot.send_message(call.message.chat.id, "–°–ø–∏—Å–æ–∫ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö —Ä–µ—Ü–µ–ø—Ç–æ–≤ –ø—É—Å—Ç.")
        global timewait
        time.sleep(timewait)  # –ó–∞–¥–µ—Ä–∂–∫–∞ –≤ 2 —Å–µ–∫—É–Ω–¥—ã 
        bot.delete_message(sent_message.chat.id, sent_message.message_id)
        start_command(call.message)

#2 —ç—Ç–∞–∂
@bot.callback_query_handler(func=lambda call: call.data.startswith('show_one_of_save_recipe:'))
def show_one_of_save_recipe(call):
    try:
        
        bot.delete_message(call.message.chat.id, call.message.message_id)
        
        # –ü–æ–ª—É—á–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ —Ä–µ—Ü–µ–ø—Ç–∞ –∏–∑ callback_data
        global recipe_name
        if len(recipe_name) == 0:
            recipe_name = call.data.split(':')[1]
        
        # –û—Ç–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª —Å —Ä–µ—Ü–µ–ø—Ç–∞–º–∏
        with open(save_recipes_file_path, 'r', encoding='utf-8') as file:
            recipes = json.load(file)
        
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤—ã–±—Ä–∞–Ω–Ω–æ–º —Ä–µ—Ü–µ–ø—Ç–µ
        recipe_info = recipes.get(recipe_name)
        
        if recipe_info:
            # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ —Ä–µ—Ü–µ–ø—Ç–µ
            recipe_text = f"üìã *{recipe_name}*\n\n"
            recipe_text += f"üïí *–í—Ä–µ–º—è –ø—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏—è:* {recipe_info.get('time')}\n\n"
            recipe_text += "ü•¶ *–ò–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã:*\n"
            for ingredient, amount in recipe_info.get('ingredients', {}).items():
                recipe_text += f"- {ingredient}: {amount}\n"
            
            recipe_text += "\nüìù *–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏:*\n"
            for instructions, amount in recipe_info.get('instructions', {}).items():
                recipe_text += f"{instructions}) {amount}\n"
            # –†–∞–∑–¥–µ–ª—è–µ–º –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ —Å—Ç—Ä–æ–∫–∞–º –∏ –¥–æ–±–∞–≤–ª—è–µ–º –∏—Ö –∫ —Å–æ–æ–±—â–µ–Ω–∏—é
            
            sent_message = bot.send_message(call.message.chat.id, recipe_text, parse_mode='Markdown')
            
            # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ "–î–æ–±–∞–≤–∏—Ç—å" –∏ "–ù–∞–∑–∞–¥"
            keyboard = InlineKeyboardMarkup(row_width=3)
            keyboard.add(InlineKeyboardButton("–£–¥–∞–ª–∏—Ç—å", callback_data=f'delete_save_recipe:{recipe_name}'))
            keyboard.add(InlineKeyboardButton("–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å", callback_data=f'edit_save_recipe:{recipe_name}'))
            keyboard.add(InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data='back_to_save_recipe'))
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–∞–º–∏
            bot.edit_message_reply_markup(chat_id=call.message.chat.id, message_id=sent_message.message_id, reply_markup=keyboard)
    
    except Exception as e:
        print(f"An error occurred: {e}")

#3 —ç—Ç–∞–∂
@bot.callback_query_handler(func=lambda call: call.data.startswith('delete_save_recipe:'))
def delete_save_recipe(call):
    try:
        bot.delete_message(call.message.chat.id, call.message.message_id)
        # –ü–æ–ª—É—á–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ —Ä–µ—Ü–µ–ø—Ç–∞ –∏–∑ callback_data
        global recipe_name 

        with open(save_recipes_file_path, 'r', encoding='utf-8') as save_recipes_file:
                    save_recipes = json.load(save_recipes_file)
               
        del save_recipes[recipe_name]

        with open(save_recipes_file_path, 'w', encoding='utf-8') as save_recipes_file:
            json.dump(save_recipes, save_recipes_file, ensure_ascii=False, indent=4)

                    
        
        sent_message = bot.send_message(call.message.chat.id, "–†–µ—Ü–µ–ø—Ç —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω –∏–∑ —Å–ø–∏—Å–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö —Ä–µ—Ü–µ–ø—Ç–æ–≤.")
        global timewait
        time.sleep(timewait)  # –ó–∞–¥–µ—Ä–∂–∫–∞ –≤ 2 —Å–µ–∫—É–Ω–¥—ã 
        bot.delete_message(sent_message.chat.id, sent_message.message_id)
        start_command(call.message)

    except Exception as e:
        print(f"An error occurred: {e}")

#3 —ç—Ç–∞–∂
@bot.callback_query_handler(func=lambda call: call.data.startswith('edit_save_recipe:'))
def edit_save_recipe(call):
    try:
        try:
            bot.delete_message(call.message.chat.id, call.message.message_id)
        except telebot.apihelper.ApiException as e:
            pass
        # –ü–æ–ª—É—á–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ —Ä–µ—Ü–µ–ø—Ç–∞ –∏–∑ callback_data
        global recipe_name
        
        # –û—Ç–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª —Å —Ä–µ—Ü–µ–ø—Ç–∞–º–∏ –¥–ª—è —á—Ç–µ–Ω–∏—è
        with open(save_recipes_file_path, 'r', encoding='utf-8') as save_recipes_file:
            all_recipes = json.load(save_recipes_file)
        
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤—ã–±—Ä–∞–Ω–Ω–æ–º —Ä–µ—Ü–µ–ø—Ç–µ
        recipe_info = all_recipes.get(recipe_name)
        
        if recipe_info:
            # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ —Ä–µ—Ü–µ–ø—Ç–µ
            recipe_text = f"üìã *{recipe_name}*\n\n"
            recipe_text += f"üïí *–í—Ä–µ–º—è –ø—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏—è:* {recipe_info.get('time')}\n\n"
            recipe_text += "ü•¶ *–ò–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã:*\n"
            for ingredient, amount in recipe_info.get('ingredients', {}).items():
                recipe_text += f"- {ingredient}: {amount}\n"
            
            recipe_text += "\nüìù *–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏:*\n"
            for instructions, amount in recipe_info.get('instructions', {}).items():
                recipe_text += f"{instructions}) {amount}\n"
            
            # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ "–í—Ä–µ–º—è", "–ò–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã", "–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è"
            keyboard = InlineKeyboardMarkup(row_width=1)
            keyboard.add(InlineKeyboardButton("–ò–∑–º–µ–Ω–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ", callback_data=f'edit_save_recipe_name:{recipe_name}'))
            keyboard.add(InlineKeyboardButton("–ò–∑–º–µ–Ω–∏—Ç—å –≤—Ä–µ–º—è", callback_data=f'edit_save_recipe_time:{recipe_name}'))
            keyboard.add(InlineKeyboardButton("–ò–∑–º–µ–Ω–∏—Ç—å –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã", callback_data=f'edit_save_recipe_ingredients:{recipe_name}'))
            keyboard.add(InlineKeyboardButton("–ò–∑–º–µ–Ω–∏—Ç—å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é", callback_data=f'edit_save_recipe_instructions:{recipe_name}'))
            keyboard.add(InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data='back_to_show_one_of_save_recipe'))
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–∞–º–∏
            bot.send_message(call.message.chat.id, recipe_text, parse_mode='Markdown', reply_markup=keyboard)
        else:
            bot.send_message(call.message.chat.id, f"–†–µ—Ü–µ–ø—Ç {recipe_name} –Ω–µ –Ω–∞–π–¥–µ–Ω.")
    
    except Exception as e:
        print(f"An error occurred: {e}")

#4 —ç—Ç–∞–∂
@bot.callback_query_handler(func=lambda call: call.data.startswith('edit_save_recipe_name:'))
def edit_save_recipe_name(call):
    try:
        bot.delete_message(call.message.chat.id, call.message.message_id)
        # –ü–æ–ª—É—á–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ —Ä–µ—Ü–µ–ø—Ç–∞ –∏–∑ callback_data
        global recipe_name

        
        sent_message = bot.send_message(call.message.chat.id, f"–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –¥–ª—è —Ä–µ—Ü–µ–ø—Ç–∞ {recipe_name}:")
        
        # –û–∂–∏–¥–∞–µ–º –æ—Ç–≤–µ—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        @bot.message_handler(func=lambda message: message.chat.id == call.message.chat.id)
        def handle_user_input(message):
            if message.text:
                new_recipe_name = message.text.strip()
                
                with open(save_recipes_file_path, 'r', encoding='utf-8') as all_recipes_file:
                    all_recipes = json.load(all_recipes_file)
               
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ä–µ—Ü–µ–ø—Ç —Å —Ç–∞–∫–∏–º –Ω–æ–≤—ã–º –Ω–∞–∑–≤–∞–Ω–∏–µ–º
                if new_recipe_name in all_recipes:
                    bot.send_message(call.message.chat.id, f"–†–µ—Ü–µ–ø—Ç —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º {new_recipe_name} —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –¥—Ä—É–≥–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ.")
                    return
                
                global recipe_name
                # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ä–µ—Ü–µ–ø—Ç–µ —Å —Å—Ç–∞—Ä—ã–º –Ω–∞–∑–≤–∞–Ω–∏–µ–º
                recipe_info = all_recipes.pop(recipe_name, None)
                
                if recipe_info:
                    # –î–æ–±–∞–≤–ª—è–µ–º —Ä–µ—Ü–µ–ø—Ç —Å –Ω–æ–≤—ã–º –Ω–∞–∑–≤–∞–Ω–∏–µ–º –∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –∏–∑ —Å—Ç–∞—Ä–æ–≥–æ —Ä–µ—Ü–µ–ø—Ç–∞
                    all_recipes[new_recipe_name] = recipe_info
                    
                    # –ü–µ—Ä–µ–∑–∞–ø–∏—Å—ã–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –≤ —Ñ–∞–π–ª–µ
                    with open(save_recipes_file_path, 'w', encoding='utf-8') as all_recipes_file:
                        json.dump(all_recipes, all_recipes_file, ensure_ascii=False, indent=4)
                    
                    # –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –±–æ—Ç–∞ –∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    try:
                        bot.delete_message(sent_message.chat.id, sent_message.message_id)
                        bot.delete_message(message.chat.id, message.message_id)
                    except Exception as e:
                        print(f"An error occurred while deleting message: {e}")
    
                    recipe_name = new_recipe_name
                    edit_save_recipe(call)

                else:
                    bot.send_message(call.message.chat.id, f"–†–µ—Ü–µ–ø—Ç —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º {recipe_name} –Ω–µ –Ω–∞–π–¥–µ–Ω.")
                
        # –û–∂–∏–¥–∞–µ–º —Å–ª–µ–¥—É—é—â–µ–≥–æ —à–∞–≥–∞ - –≤–≤–æ–¥–∞ –Ω–æ–≤–æ–≥–æ –Ω–∞–∑–≤–∞–Ω–∏—è —Ä–µ—Ü–µ–ø—Ç–∞
        bot.register_next_step_handler(sent_message, handle_user_input)
        
    except Exception as e:
        print(f"An error occurred: {e}")

#4 —ç—Ç–∞–∂
@bot.callback_query_handler(func=lambda call: call.data.startswith('edit_save_recipe_time:'))
def edit_save_recipe_time(call):
    try:
        bot.delete_message(call.message.chat.id, call.message.message_id)
        # –ü–æ–ª—É—á–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ —Ä–µ—Ü–µ–ø—Ç–∞ –∏–∑ callback_data
        global recipe_name
        
        # –û—Ç–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª —Å —Ä–µ—Ü–µ–ø—Ç–∞–º–∏ –¥–ª—è —á—Ç–µ–Ω–∏—è
        with open(save_recipes_file_path, 'r', encoding='utf-8') as all_recipes_file:
            all_recipes = json.load(all_recipes_file)
        
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤—ã–±—Ä–∞–Ω–Ω–æ–º —Ä–µ—Ü–µ–ø—Ç–µ
        recipe_info = all_recipes.get(recipe_name)
        
        if recipe_info:
            # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è –∏–∑ —Ä–µ—Ü–µ–ø—Ç–∞
            current_time = recipe_info.get('time', '')
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ç–µ–∫—É—â–∏–º –≤—Ä–µ–º–µ–Ω–µ–º –∏ –ø—Ä–æ—Å—å–±–æ–π –≤–≤–µ—Å—Ç–∏ –Ω–æ–≤–æ–µ –≤—Ä–µ–º—è
            sent_message = bot.send_message(call.message.chat.id, f"–¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è –¥–ª—è —Ä–µ—Ü–µ–ø—Ç–∞ {recipe_name}: {current_time}\n\n–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –≤—Ä–µ–º—è:")
            
            # –û–∂–∏–¥–∞–µ–º –æ—Ç–≤–µ—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            @bot.message_handler(func=lambda message: message.chat.id == call.message.chat.id)
            def handle_user_input(message):
                if message.text:
                    new_time = message.text.strip()
                    
                    # –û–±–Ω–æ–≤–ª—è–µ–º –≤—Ä–µ–º—è —Ä–µ—Ü–µ–ø—Ç–∞
                    recipe_info['time'] = new_time
                    
                    # –ü–µ—Ä–µ–∑–∞–ø–∏—Å—ã–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –≤ —Ñ–∞–π–ª–µ
                    with open(save_recipes_file_path, 'w', encoding='utf-8') as all_recipes_file:
                        json.dump(all_recipes, all_recipes_file, ensure_ascii=False, indent=4)
                    
                    # –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –±–æ—Ç–∞ –∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    try:
                        bot.delete_message(sent_message.chat.id, sent_message.message_id)
                        bot.delete_message(message.chat.id, message.message_id)
                    except Exception as e:
                        print(f"An error occurred while deleting message: {e}")
                    
                    # –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –¥—Ä—É–≥–∏—Ö –∞—Å–ø–µ–∫—Ç–æ–≤ —Ä–µ—Ü–µ–ø—Ç–∞
                    edit_save_recipe(call)
                
            # –û–∂–∏–¥–∞–µ–º —Å–ª–µ–¥—É—é—â–µ–≥–æ —à–∞–≥–∞ - –≤–≤–æ–¥–∞ –≤—Ä–µ–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
            bot.register_next_step_handler(sent_message, handle_user_input)
        else:
            bot.send_message(call.message.chat.id, f"–†–µ—Ü–µ–ø—Ç {recipe_name} –Ω–µ –Ω–∞–π–¥–µ–Ω.")
    
    except Exception as e:
        print(f"An error occurred: {e}")

#4 —ç—Ç–∞–∂
@bot.callback_query_handler(func=lambda call: call.data.startswith('edit_save_recipe_ingredients:'))
def edit_save_recipe_ingredients(call):
    try:
        bot.delete_message(call.message.chat.id, call.message.message_id)
        # –ü–æ–ª—É—á–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ —Ä–µ—Ü–µ–ø—Ç–∞ –∏–∑ callback_data
        global recipe_name
        
        # –û—Ç–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª —Å —Ä–µ—Ü–µ–ø—Ç–∞–º–∏ –¥–ª—è —á—Ç–µ–Ω–∏—è
        with open(save_recipes_file_path, 'r', encoding='utf-8') as all_recipes_file:
            all_recipes = json.load(all_recipes_file)
        
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤—ã–±—Ä–∞–Ω–Ω–æ–º —Ä–µ—Ü–µ–ø—Ç–µ
        recipe_info = all_recipes.get(recipe_name)
        
        if recipe_info:
            current_ingredients_str = f"–¢–µ–∫—É—â–∏–µ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã –¥–ª—è —Ä–µ—Ü–µ–ø—Ç–∞ {recipe_name}:\n"
            for ingredient, quantity in recipe_info.get('ingredients', {}).items():
                current_ingredients_str += f"{ingredient} - {quantity}\n"

            # –ó–∞—Ç–µ–º –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ –≤–≤–æ–¥ –Ω–æ–≤—ã—Ö –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–æ–≤
            sent_message = bot.send_message(call.message.chat.id, current_ingredients_str + "\n–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–µ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã (–∫–∞–∂–¥—ã–π —Å –Ω–æ–≤–æ–π —Å—Ç—Ä–æ–∫–∏):")

            # –û–∂–∏–¥–∞–µ–º –æ—Ç–≤–µ—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            @bot.message_handler(func=lambda message: message.chat.id == call.message.chat.id)
            def handle_user_input(message):
                if message.text:
                    new_ingredients = message.text.strip().split('\n')
                    
                    # –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã —Ä–µ—Ü–µ–ø—Ç–∞
                    updated_ingredients = {}
                    delete = []
                    for ingredient in new_ingredients:
                        ingredient_split = ingredient.strip().split(' ')
                        if len(ingredient_split) >= 2 and ingredient_split[1] == '0':
                            delete.append(ingredient_split[0])
                        elif len(ingredient_split) >= 2:
                            ingredient_name = str(ingredient_split[0])
                            quantity = ingredient_split[-1]
                            updated_ingredients[ingredient_name] = quantity
                        elif len(ingredient_split) == 1:
                            ingredient_name = str(ingredient_split[0])
                            quantity = " "
                            updated_ingredients[ingredient_name] = quantity
                        else:
                            bot.send_message(call.message.chat.id, f"–û—à–∏–±–∫–∞: –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –≤–≤–æ–¥–∞ –¥–ª—è –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–∞: {ingredient}. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ñ–æ—Ä–º–∞—Ç '–∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç - –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ'")
                    
                    # –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã —Ä–µ—Ü–µ–ø—Ç–∞
                    if updated_ingredients:
                        recipe_info['ingredients'].update(updated_ingredients)
                    for a in delete:
                        if a in recipe_info['ingredients']:
                            del recipe_info['ingredients'][a]

                        
                    # –ü–µ—Ä–µ–∑–∞–ø–∏—Å—ã–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –≤ —Ñ–∞–π–ª–µ
                    with open(save_recipes_file_path, 'w', encoding='utf-8') as all_recipes_file:
                        json.dump(all_recipes, all_recipes_file, ensure_ascii=False, indent=4)
                    

                    # –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –±–æ—Ç–∞ –∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    try:
                        bot.delete_message(sent_message.chat.id, sent_message.message_id)
                        bot.delete_message(message.chat.id, message.message_id)
                    except Exception as e:
                        print(f"An error occurred while deleting message: {e}")
                    
                    # –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –¥—Ä—É–≥–∏—Ö –∞—Å–ø–µ–∫—Ç–æ–≤ —Ä–µ—Ü–µ–ø—Ç–∞
                    edit_save_recipe(call)
            
            # –û–∂–∏–¥–∞–µ–º —Å–ª–µ–¥—É—é—â–µ–≥–æ —à–∞–≥–∞ - –≤–≤–æ–¥–∞ –Ω–æ–≤—ã—Ö –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
            bot.register_next_step_handler(sent_message, handle_user_input)
        else:
            bot.send_message(call.message.chat.id, f"–†–µ—Ü–µ–ø—Ç {recipe_name} –Ω–µ –Ω–∞–π–¥–µ–Ω.")
    
    except Exception as e:
        print(f"An error occurred: {e}")

#4 —ç—Ç–∞–∂
@bot.callback_query_handler(func=lambda call: call.data.startswith('edit_save_recipe_instructions:'))
def edit_save_recipe_instructions(call):
    try:
        bot.delete_message(call.message.chat.id, call.message.message_id)
        # –ü–æ–ª—É—á–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ —Ä–µ—Ü–µ–ø—Ç–∞ –∏–∑ callback_data
        global recipe_name
        
        # –û—Ç–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª —Å —Ä–µ—Ü–µ–ø—Ç–∞–º–∏ –¥–ª—è —á—Ç–µ–Ω–∏—è
        with open(save_recipes_file_path, 'r', encoding='utf-8') as all_recipes_file:
            all_recipes = json.load(all_recipes_file)
        
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤—ã–±—Ä–∞–Ω–Ω–æ–º —Ä–µ—Ü–µ–ø—Ç–µ
        recipe_info = all_recipes.get(recipe_name)
        
        if recipe_info:
            current_instructions_str = f"–ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å:\n"
            current_instructions_str += f"'—á–∏—Å–ª–æ') - —É–¥–∞–ª–µ–Ω–∏–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ–¥ –Ω–æ–º–µ—Ä–æ–º '—á–∏—Å–ª–æ'\n"
            current_instructions_str += f"'—á–∏—Å–ª–æ') '–ª—é–±–æ–π —Ç–µ–∫—Å—Ç' - –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ–¥ –Ω–æ–º–µ—Ä–æ–º '—á–∏—Å–ª–æ' —Å —Ç–µ–∫—Å—Ç–æ–º '–ª—é–±–æ–π —Ç–µ–∫—Å—Ç'\n"
            for instructions, quantity in recipe_info.get('instructions', {}).items():
                current_instructions_str += f"{instructions}) {quantity}\n"

            # –ó–∞—Ç–µ–º –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ –≤–≤–æ–¥ –Ω–æ–≤—ã—Ö –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π
            sent_message = bot.send_message(call.message.chat.id, current_instructions_str + "\n–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ (–∫–∞–∂–¥–∞—è —Å –Ω–æ–≤–æ–π —Å—Ç—Ä–æ–∫–∏):")


            # –û–∂–∏–¥–∞–µ–º –æ—Ç–≤–µ—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            @bot.message_handler(func=lambda message: message.chat.id == call.message.chat.id)
            def handle_user_input(message):
                if message.text:
                    new_instruction = message.text.strip().split('\n')
                    
                    # –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã —Ä–µ—Ü–µ–ø—Ç–∞
                    updated_instruction = {}
                    delete = []
                    for instruction in new_instruction:
                        instruction_stripped = instruction.strip()
                        instruction_split = instruction_stripped.split(')')
                        if len(instruction_split) == 2 and instruction_split[1] == '':
                            delete.append(instruction_split[0])
                        elif len(instruction_split) >= 2:
                            instruction_name = str(instruction_split[0])
                            quantity = instruction_split[-1]
                            updated_instruction[instruction_name] = quantity
                        else:
                            bot.send_message(call.message.chat.id, f"–û—à–∏–±–∫–∞: –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –≤–≤–æ–¥–∞ –¥–ª—è –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–∞: {instruction}. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ñ–æ—Ä–º–∞—Ç '–∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç - –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ'")
                    
                    # –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã —Ä–µ—Ü–µ–ø—Ç–∞
                    if updated_instruction:
                        recipe_info['instructions'].update(updated_instruction)
                    for a in delete:
                        if a in recipe_info['instructions']:
                            del recipe_info['instructions'][a]

                        
                    # –ü–µ—Ä–µ–∑–∞–ø–∏—Å—ã–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –≤ —Ñ–∞–π–ª–µ
                    with open(save_recipes_file_path, 'w', encoding='utf-8') as all_recipes_file:
                        json.dump(all_recipes, all_recipes_file, ensure_ascii=False, indent=4)
                    

                    # –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –±–æ—Ç–∞ –∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    try:
                        bot.delete_message(sent_message.chat.id, sent_message.message_id)
                        bot.delete_message(message.chat.id, message.message_id)
                    except Exception as e:
                        print(f"An error occurred while deleting message: {e}")
                    
                    # –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –¥—Ä—É–≥–∏—Ö –∞—Å–ø–µ–∫—Ç–æ–≤ —Ä–µ—Ü–µ–ø—Ç–∞
                    edit_save_recipe(call)
            
            # –û–∂–∏–¥–∞–µ–º —Å–ª–µ–¥—É—é—â–µ–≥–æ —à–∞–≥–∞ - –≤–≤–æ–¥–∞ –Ω–æ–≤—ã—Ö –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
            bot.register_next_step_handler(sent_message, handle_user_input)
        else:
            bot.send_message(call.message.chat.id, f"–†–µ—Ü–µ–ø—Ç {recipe_name} –Ω–µ –Ω–∞–π–¥–µ–Ω.")
    
    except Exception as e:
        print(f"An error occurred: {e}")



#1 —ç—Ç–∞–∂
@bot.callback_query_handler(func=lambda call: call.data == 'shope_list')
def shope_list(call):

    global all_ingredients
    MAX_BUTTON_TEXT_LENGTH = 27

    bot.delete_message(call.message.chat.id, call.message.message_id)

    if len(all_ingredients):
                

        keyboard = types.InlineKeyboardMarkup(row_width=1)
        for i in range(len(all_ingredients)):
            keyboard.add(types.InlineKeyboardButton(text=all_ingredients[i], callback_data=f'choose_shope_ingredient:{i}'))


        keyboard.add(InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data='back_to_welcome'))
        bot.send_message(call.message.chat.id, '–ò–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã –¥–ª—è –ø–æ–∫—É–ø–æ–∫:', reply_markup=keyboard)


    else:
        sent_message = bot.send_message(call.message.chat.id, "–°–ø–∏—Å–æ–∫ –ø—É—Å—Ç.")
        global timewait
        time.sleep(timewait)  # –ó–∞–¥–µ—Ä–∂–∫–∞ –≤ 2 —Å–µ–∫—É–Ω–¥—ã 
        bot.delete_message(sent_message.chat.id, sent_message.message_id)
        start_command(call.message)

#2 —ç—Ç–∞–∂
@bot.callback_query_handler(func=lambda call: call.data.startswith('choose_shope_ingredient:'))
def choose_shope_ingredient(call):

    ingredient = call.data
    ingredient = int(ingredient.split(':')[1])
    del all_ingredients[ingredient]
    shope_list(call)








#1 —ç—Ç–∞–∂
@bot.callback_query_handler(func=lambda call: call.data == 'doing_recipe')
def doing_recipe(call):
    bot.delete_message(call.message.chat.id, call.message.message_id)

    markup = types.InlineKeyboardMarkup(row_width=4)
    item_all_recipe = types.InlineKeyboardButton("–í—Å–µ —Ä–µ—Ü–µ–ø—Ç—ã", callback_data='all_recipe')
    item_created_recipe = types.InlineKeyboardButton("–°–æ–∑–¥–∞—Ç—å —Ä–µ—Ü–µ–ø—Ç", callback_data='created_recipe')
    item_internet_recipe = types.InlineKeyboardButton("–†–µ—Ü–µ–ø—Ç—ã —Å –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞", callback_data='internet_recipe')

    markup.add(item_all_recipe)
    markup.add(item_created_recipe)
    markup.add(item_internet_recipe)

    markup.add(InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data='back_to_welcome'))

    bot.send_message(call.message.chat.id, '–í—ã–±–µ—Ä–µ—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ', reply_markup=markup)

#2 —ç—Ç–∞–∂
@bot.callback_query_handler(func=lambda call: call.data == 'all_recipe')
def show_all_recipe(call):

    global recipe_name
    recipe_name = ""

    bot.delete_message(call.message.chat.id, call.message.message_id)

    try:
        # –û—Ç–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª —Å —Ä–µ—Ü–µ–ø—Ç–∞–º–∏
        with open(all_recipes_file_path, 'r', encoding='utf-8') as file:
            recipes = json.load(file)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø—É—Å—Ç –ª–∏ —Ñ–∞–π–ª
        if not recipes:
            bot.send_message(call.message.chat.id, "–°–ø–∏—Å–æ–∫ —Ä–µ—Ü–µ–ø—Ç–æ–≤ –ø—É—Å—Ç.")
            return
        
        # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ä–µ—Ü–µ–ø—Ç–∞
        keyboard = InlineKeyboardMarkup()
        for recipe_name_model in recipes:
            keyboard.add(InlineKeyboardButton(recipe_name_model, callback_data=f'show_one_of_all_recipe:{recipe_name_model}'))
        
        keyboard.add(InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data='back_to_doing_recipe'))

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π
        bot.send_message(call.message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ—Ü–µ–ø—Ç:', reply_markup=keyboard)
        
    except Exception as e:
        print(f"An error occurred: {e}")

#3 —ç—Ç–∞–∂
@bot.callback_query_handler(func=lambda call: call.data.startswith('show_one_of_all_recipe:'))
def show_one_of_all_recipe(call):
    try:
        bot.delete_message(call.message.chat.id, call.message.message_id)
        
        # –ü–æ–ª—É—á–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ —Ä–µ—Ü–µ–ø—Ç–∞ –∏–∑ callback_data
        global recipe_name
        if len(recipe_name) == 0:
            recipe_name = call.data.split(':')[1]
        
        # –û—Ç–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª —Å —Ä–µ—Ü–µ–ø—Ç–∞–º–∏
        with open(all_recipes_file_path, 'r', encoding='utf-8') as file:
            recipes = json.load(file)
        
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤—ã–±—Ä–∞–Ω–Ω–æ–º —Ä–µ—Ü–µ–ø—Ç–µ
        recipe_info = recipes.get(recipe_name)
        
        if recipe_info:
            # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ —Ä–µ—Ü–µ–ø—Ç–µ
            recipe_text = f"üìã *{recipe_name}*\n\n"
            recipe_text += f"üïí *–í—Ä–µ–º—è –ø—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏—è:* {recipe_info.get('time')}\n\n"
            recipe_text += "ü•¶ *–ò–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã:*\n"
            for ingredient, amount in recipe_info.get('ingredients', {}).items():
                recipe_text += f"- {ingredient}: {amount}\n"
            
            recipe_text += "\nüìù *–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏:*\n"
            for instructions, amount in recipe_info.get('instructions', {}).items():
                recipe_text += f"{instructions}) {amount}\n"
            
            sent_message = bot.send_message(call.message.chat.id, recipe_text, parse_mode='Markdown')
            
            # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ "–î–æ–±–∞–≤–∏—Ç—å" –∏ "–ù–∞–∑–∞–¥"
            keyboard = InlineKeyboardMarkup(row_width=3)
            keyboard.add(InlineKeyboardButton("–î–æ–±–∞–≤–∏—Ç—å", callback_data=f'add_all_recipe:{recipe_name}'))
            keyboard.add(InlineKeyboardButton("–£–¥–∞–ª–∏—Ç—å", callback_data=f'delete_all_recipe:{recipe_name}'))
            keyboard.add(InlineKeyboardButton("–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å", callback_data=f'edit_all_recipe:{recipe_name}'))
            keyboard.add(InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data='back_to_all_recipe'))
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–∞–º–∏
            bot.edit_message_reply_markup(chat_id=call.message.chat.id, message_id=sent_message.message_id, reply_markup=keyboard)
    
    except Exception as e:
        print(f"An error occurred: {e}")

#4 —ç—Ç–∞–∂
@bot.callback_query_handler(func=lambda call: call.data.startswith('add_all_recipe:'))
def add_all_recipe(call):
    try:
        bot.delete_message(call.message.chat.id, call.message.message_id)
        # –ü–æ–ª—É—á–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ —Ä–µ—Ü–µ–ø—Ç–∞ –∏–∑ callback_data
        global recipe_name
        
        # –û—Ç–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª —Å —Ä–µ—Ü–µ–ø—Ç–∞–º–∏ –¥–ª—è —á—Ç–µ–Ω–∏—è
        with open(all_recipes_file_path, 'r', encoding='utf-8') as all_recipes_file:
            all_recipes = json.load(all_recipes_file)
        
        with open(save_recipes_file_path, 'r', encoding='utf-8') as save_recipes_file:
            save_recipes = json.load(save_recipes_file)


        global all_ingredients
        ingredients = all_recipes[recipe_name].get('ingredients', {})
        # –ü—Ä–æ—Ö–æ–¥–∏–º –ø–æ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–∞–º —Ç–µ–∫—É—â–µ–≥–æ —Ä–µ—Ü–µ–ø—Ç–∞
        for ingredient, quantity in ingredients.items():
            # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —Å—Ç—Ä–æ–∫—É –¥–ª—è –≤–∫–ª—é—á–µ–Ω–∏—è –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–∞ –∏ –µ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞
            ingredient_str = f"{ingredient} - {quantity}"

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç –≤ —Å–ø–∏—Å–∫–µ all_ingredients
            found = False
            for idx, existing_ingredient in enumerate(all_ingredients):
                if ingredient in existing_ingredient:
                    found = True
                    existing_ingredient_parts = existing_ingredient.split(' - ')[1].split(' | ')

                    new_quantity = int(quantity.split(' ')[0])
                    new_name = quantity.split(' ')[1]

                    updated_ingredient_str = f"{ingredient} -"

                    b = True

                    for i in range(len(existing_ingredient_parts)):
                        existing_quantity = existing_ingredient_parts[i].split(' ')[0]
                        existing_name = ' '.join(existing_ingredient_parts[i].split(' ')[1:])

                        if existing_name == new_name:
                            b == False
                            updated_quantity = existing_quantity + new_quantity
                            unit = existing_name
                            updated_ingredient_str += f" {updated_quantity} {unit} |"
                        else:
                            updated_ingredient_str += f" {existing_quantity} {existing_name} |"

                    if b:
                        updated_ingredient_str += f" {new_quantity} {new_name} |"

                    updated_ingredient_str = updated_ingredient_str[:len(updated_ingredient_str)-2]


                    all_ingredients[idx] = updated_ingredient_str
                    break

            # –ï—Å–ª–∏ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Å–ø–∏—Å–∫–µ, –¥–æ–±–∞–≤–ª—è–µ–º –µ–≥–æ
            if not found:
                all_ingredients.append(ingredient_str)


        save_recipes[recipe_name] = all_recipes[recipe_name]

        with open(save_recipes_file_path, 'w', encoding='utf-8') as save_recipes_file:
            json.dump(save_recipes, save_recipes_file, ensure_ascii=False, indent=4)

        

        sent_message = bot.send_message(call.message.chat.id, "–†–µ—Ü–µ–ø—Ç —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω –≤ —Å–ø–∏—Å–æ–∫ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö —Ä–µ—Ü–µ–ø—Ç–æ–≤.")
        global timewait
        time.sleep(timewait)  # –ó–∞–¥–µ—Ä–∂–∫–∞ –≤ 2 —Å–µ–∫—É–Ω–¥—ã 
        bot.delete_message(sent_message.chat.id, sent_message.message_id)
        start_command(call.message)

    except Exception as e:
        print(f"An error occurred: {e}")

@bot.callback_query_handler(func=lambda call: call.data.startswith('delete_all_recipe:'))
def delete_all_recipe(call):
    try:
        bot.delete_message(call.message.chat.id, call.message.message_id)
        # –ü–æ–ª—É—á–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ —Ä–µ—Ü–µ–ø—Ç–∞ –∏–∑ callback_data
        global recipe_name 

        with open(all_recipes_file_path, 'r', encoding='utf-8') as all_recipes_file:
                    save_recipes = json.load(all_recipes_file)
               
        del save_recipes[recipe_name]

        with open(all_recipes_file_path, 'w', encoding='utf-8') as all_recipes_file:
            json.dump(save_recipes, all_recipes_file, ensure_ascii=False, indent=4)

                    
        
        sent_message = bot.send_message(call.message.chat.id, "–†–µ—Ü–µ–ø—Ç —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω –∏–∑ —Å–ø–∏—Å–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö —Ä–µ—Ü–µ–ø—Ç–æ–≤.")
        global timewait
        time.sleep(timewait)  # –ó–∞–¥–µ—Ä–∂–∫–∞ –≤ 2 —Å–µ–∫—É–Ω–¥—ã 
        bot.delete_message(sent_message.chat.id, sent_message.message_id)
        start_command(call.message)

    except Exception as e:
        print(f"An error occurred: {e}")

#4 —ç—Ç–∞–∂
@bot.callback_query_handler(func=lambda call: call.data.startswith('edit_all_recipe:'))
def edit_all_recipe(call):
    try:
        try:
            bot.delete_message(call.message.chat.id, call.message.message_id)
        except telebot.apihelper.ApiException as e:
            pass
        # –ü–æ–ª—É—á–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ —Ä–µ—Ü–µ–ø—Ç–∞ –∏–∑ callback_data
        global recipe_name
        
        # –û—Ç–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª —Å —Ä–µ—Ü–µ–ø—Ç–∞–º–∏ –¥–ª—è —á—Ç–µ–Ω–∏—è
        with open(all_recipes_file_path, 'r', encoding='utf-8') as all_recipes_file:
            all_recipes = json.load(all_recipes_file)
        
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤—ã–±—Ä–∞–Ω–Ω–æ–º —Ä–µ—Ü–µ–ø—Ç–µ
        recipe_info = all_recipes.get(recipe_name)
        
        if recipe_info:
            # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ —Ä–µ—Ü–µ–ø—Ç–µ
            recipe_text = f"üìã *{recipe_name}*\n\n"
            recipe_text += f"üïí *–í—Ä–µ–º—è –ø—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏—è:* {recipe_info.get('time')}\n\n"
            recipe_text += "ü•¶ *–ò–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã:*\n"
            for ingredient, amount in recipe_info.get('ingredients', {}).items():
                recipe_text += f"- {ingredient}: {amount}\n"
            
            recipe_text += "\nüìù *–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏:*\n"
            for instructions, amount in recipe_info.get('instructions', {}).items():
                recipe_text += f"{instructions}) {amount}\n"
            
            # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ "–í—Ä–µ–º—è", "–ò–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã", "–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è"
            keyboard = InlineKeyboardMarkup(row_width=1)
            keyboard.add(InlineKeyboardButton("–ò–∑–º–µ–Ω–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ", callback_data=f'edit_all_recipe_name:{recipe_name}'))
            keyboard.add(InlineKeyboardButton("–ò–∑–º–µ–Ω–∏—Ç—å –≤—Ä–µ–º—è", callback_data=f'edit_all_recipe_time:{recipe_name}'))
            keyboard.add(InlineKeyboardButton("–ò–∑–º–µ–Ω–∏—Ç—å –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã", callback_data=f'edit_all_recipe_ingredients:{recipe_name}'))
            keyboard.add(InlineKeyboardButton("–ò–∑–º–µ–Ω–∏—Ç—å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é", callback_data=f'edit_all_recipe_instructions:{recipe_name}'))
            keyboard.add(InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data='back_to_show_one_of_all_recipe'))
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–∞–º–∏
            bot.send_message(call.message.chat.id, recipe_text, parse_mode='Markdown', reply_markup=keyboard)
        else:
            bot.send_message(call.message.chat.id, f"–†–µ—Ü–µ–ø—Ç {recipe_name} –Ω–µ –Ω–∞–π–¥–µ–Ω.")
    
    except Exception as e:
        print(f"An error occurred: {e}")

#5 —ç—Ç–∞–∂
@bot.callback_query_handler(func=lambda call: call.data.startswith('edit_all_recipe_name:'))
def edit_all_recipe_name(call):
    try:
        bot.delete_message(call.message.chat.id, call.message.message_id)
        # –ü–æ–ª—É—á–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ —Ä–µ—Ü–µ–ø—Ç–∞ –∏–∑ callback_data
        global recipe_name

        
        sent_message = bot.send_message(call.message.chat.id, f"–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –¥–ª—è —Ä–µ—Ü–µ–ø—Ç–∞ {recipe_name}:")
        
        # –û–∂–∏–¥–∞–µ–º –æ—Ç–≤–µ—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        @bot.message_handler(func=lambda message: message.chat.id == call.message.chat.id)
        def handle_user_input(message):
            if message.text:
                new_recipe_name = message.text.strip()
                
                with open(all_recipes_file_path, 'r', encoding='utf-8') as all_recipes_file:
                    all_recipes = json.load(all_recipes_file)
               
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ä–µ—Ü–µ–ø—Ç —Å —Ç–∞–∫–∏–º –Ω–æ–≤—ã–º –Ω–∞–∑–≤–∞–Ω–∏–µ–º
                if new_recipe_name in all_recipes:
                    bot.send_message(call.message.chat.id, f"–†–µ—Ü–µ–ø—Ç —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º {new_recipe_name} —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –¥—Ä—É–≥–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ.")
                    return
                
                global recipe_name
                # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ä–µ—Ü–µ–ø—Ç–µ —Å —Å—Ç–∞—Ä—ã–º –Ω–∞–∑–≤–∞–Ω–∏–µ–º
                recipe_info = all_recipes.pop(recipe_name, None)
                
                if recipe_info:
                    # –î–æ–±–∞–≤–ª—è–µ–º —Ä–µ—Ü–µ–ø—Ç —Å –Ω–æ–≤—ã–º –Ω–∞–∑–≤–∞–Ω–∏–µ–º –∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –∏–∑ —Å—Ç–∞—Ä–æ–≥–æ —Ä–µ—Ü–µ–ø—Ç–∞
                    all_recipes[new_recipe_name] = recipe_info
                    
                    # –ü–µ—Ä–µ–∑–∞–ø–∏—Å—ã–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –≤ —Ñ–∞–π–ª–µ
                    with open(all_recipes_file_path, 'w', encoding='utf-8') as all_recipes_file:
                        json.dump(all_recipes, all_recipes_file, ensure_ascii=False, indent=4)
                    
                    # –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –±–æ—Ç–∞ –∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    try:
                        bot.delete_message(sent_message.chat.id, sent_message.message_id)
                        bot.delete_message(message.chat.id, message.message_id)
                    except Exception as e:
                        print(f"An error occurred while deleting message: {e}")
    
                    recipe_name = new_recipe_name
                    edit_all_recipe(call)

                else:
                    bot.send_message(call.message.chat.id, f"–†–µ—Ü–µ–ø—Ç —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º {recipe_name} –Ω–µ –Ω–∞–π–¥–µ–Ω.")
                
        # –û–∂–∏–¥–∞–µ–º —Å–ª–µ–¥—É—é—â–µ–≥–æ —à–∞–≥–∞ - –≤–≤–æ–¥–∞ –Ω–æ–≤–æ–≥–æ –Ω–∞–∑–≤–∞–Ω–∏—è —Ä–µ—Ü–µ–ø—Ç–∞
        bot.register_next_step_handler(sent_message, handle_user_input)
        
    except Exception as e:
        print(f"An error occurred: {e}")

#5 —ç—Ç–∞–∂
@bot.callback_query_handler(func=lambda call: call.data.startswith('edit_all_recipe_time:'))
def edit_all_recipe_time(call):
    try:
        bot.delete_message(call.message.chat.id, call.message.message_id)
        # –ü–æ–ª—É—á–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ —Ä–µ—Ü–µ–ø—Ç–∞ –∏–∑ callback_data
        global recipe_name
        
        # –û—Ç–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª —Å —Ä–µ—Ü–µ–ø—Ç–∞–º–∏ –¥–ª—è —á—Ç–µ–Ω–∏—è
        with open(all_recipes_file_path, 'r', encoding='utf-8') as all_recipes_file:
            all_recipes = json.load(all_recipes_file)
        
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤—ã–±—Ä–∞–Ω–Ω–æ–º —Ä–µ—Ü–µ–ø—Ç–µ
        recipe_info = all_recipes.get(recipe_name)
        
        if recipe_info:
            # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è –∏–∑ —Ä–µ—Ü–µ–ø—Ç–∞
            current_time = recipe_info.get('time', '')
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ç–µ–∫—É—â–∏–º –≤—Ä–µ–º–µ–Ω–µ–º –∏ –ø—Ä–æ—Å—å–±–æ–π –≤–≤–µ—Å—Ç–∏ –Ω–æ–≤–æ–µ –≤—Ä–µ–º—è
            sent_message = bot.send_message(call.message.chat.id, f"–¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è –¥–ª—è —Ä–µ—Ü–µ–ø—Ç–∞ {recipe_name}: {current_time}\n\n–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –≤—Ä–µ–º—è:")
            
            # –û–∂–∏–¥–∞–µ–º –æ—Ç–≤–µ—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            @bot.message_handler(func=lambda message: message.chat.id == call.message.chat.id)
            def handle_user_input(message):
                if message.text:
                    new_time = message.text.strip()
                    
                    # –û–±–Ω–æ–≤–ª—è–µ–º –≤—Ä–µ–º—è —Ä–µ—Ü–µ–ø—Ç–∞
                    recipe_info['time'] = new_time
                    
                    # –ü–µ—Ä–µ–∑–∞–ø–∏—Å—ã–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –≤ —Ñ–∞–π–ª–µ
                    with open(all_recipes_file_path, 'w', encoding='utf-8') as all_recipes_file:
                        json.dump(all_recipes, all_recipes_file, ensure_ascii=False, indent=4)
                    
                    # –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –±–æ—Ç–∞ –∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    try:
                        bot.delete_message(sent_message.chat.id, sent_message.message_id)
                        bot.delete_message(message.chat.id, message.message_id)
                    except Exception as e:
                        print(f"An error occurred while deleting message: {e}")
                    
                    # –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –¥—Ä—É–≥–∏—Ö –∞—Å–ø–µ–∫—Ç–æ–≤ —Ä–µ—Ü–µ–ø—Ç–∞
                    edit_all_recipe(call)
                
            # –û–∂–∏–¥–∞–µ–º —Å–ª–µ–¥—É—é—â–µ–≥–æ —à–∞–≥–∞ - –≤–≤–æ–¥–∞ –≤—Ä–µ–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
            bot.register_next_step_handler(sent_message, handle_user_input)
        else:
            bot.send_message(call.message.chat.id, f"–†–µ—Ü–µ–ø—Ç {recipe_name} –Ω–µ –Ω–∞–π–¥–µ–Ω.")
    
    except Exception as e:
        print(f"An error occurred: {e}")

#5 —ç—Ç–∞–∂
@bot.callback_query_handler(func=lambda call: call.data.startswith('edit_all_recipe_ingredients:'))
def edit_all_recipe_ingredients(call):
    try:
        bot.delete_message(call.message.chat.id, call.message.message_id)
        # –ü–æ–ª—É—á–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ —Ä–µ—Ü–µ–ø—Ç–∞ –∏–∑ callback_data
        global recipe_name
        
        # –û—Ç–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª —Å —Ä–µ—Ü–µ–ø—Ç–∞–º–∏ –¥–ª—è —á—Ç–µ–Ω–∏—è
        with open(all_recipes_file_path, 'r', encoding='utf-8') as all_recipes_file:
            all_recipes = json.load(all_recipes_file)
        
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤—ã–±—Ä–∞–Ω–Ω–æ–º —Ä–µ—Ü–µ–ø—Ç–µ
        recipe_info = all_recipes.get(recipe_name)
        
        if recipe_info: 
            current_ingredients_str = f"–¢–µ–∫—É—â–∏–µ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã –¥–ª—è —Ä–µ—Ü–µ–ø—Ç–∞ {recipe_name}:\n"
            for ingredient, quantity in recipe_info.get('ingredients', {}).items():
                current_ingredients_str += f"{ingredient} - {quantity}\n"

            current_ingredients_str += f"\n–ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å:\n"
            current_ingredients_str += f"'–∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç' - 0 - —É–¥–∞–ª–µ–Ω–∏–µ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–∞ –ø–æ–¥ –Ω–æ–º–µ—Ä–æ–º '—á–∏—Å–ª–æ'\n"
            current_ingredients_str += f"'–∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç' - '–ª—é–±–æ–π —Ç–µ–∫—Å—Ç' - –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–∞\n"
            current_ingredients_str += "\n\n–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–µ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã (–∫–∞–∂–¥—ã–π —Å –Ω–æ–≤–æ–π —Å—Ç—Ä–æ–∫–∏):"
            # –ó–∞—Ç–µ–º –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ –≤–≤–æ–¥ –Ω–æ–≤—ã—Ö –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–æ–≤
            sent_message = bot.send_message(call.message.chat.id, current_ingredients_str)

            # –û–∂–∏–¥–∞–µ–º –æ—Ç–≤–µ—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            @bot.message_handler(func=lambda message: message.chat.id == call.message.chat.id)
            def handle_user_input(message):
                if message.text:
                    new_ingredients = message.text.strip().split('\n')
                    
                    # –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã —Ä–µ—Ü–µ–ø—Ç–∞
                    updated_ingredients = {}
                    delete = []
                    for ingredient in new_ingredients:
                        ingredient_split = ingredient.strip().split('-')
                        if len(ingredient_split) == 2 and ingredient_split[1] == '0':
                            delete.append(ingredient_split[0])
                        elif len(ingredient_split) >= 2:
                            ingredient_name = str(ingredient_split[0])
                            quantity = ingredient_split[-1]
                            updated_ingredients[ingredient_name] = quantity
                        elif len(ingredient_split) == 1:
                            ingredient_name = str(ingredient_split[0])
                            quantity = " "
                            updated_ingredients[ingredient_name] = quantity
                        else:
                            bot.send_message(call.message.chat.id, f"–û—à–∏–±–∫–∞: –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –≤–≤–æ–¥–∞ –¥–ª—è –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–∞: {ingredient}. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ñ–æ—Ä–º–∞—Ç '–∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç - –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ'")
                    
                    # –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã —Ä–µ—Ü–µ–ø—Ç–∞
                    if updated_ingredients:
                        recipe_info['ingredients'].update(updated_ingredients)
                    for a in delete:
                        if a in recipe_info['ingredients']:
                            del recipe_info['ingredients'][a]

                        
                    # –ü–µ—Ä–µ–∑–∞–ø–∏—Å—ã–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –≤ —Ñ–∞–π–ª–µ
                    with open(all_recipes_file_path, 'w', encoding='utf-8') as all_recipes_file:
                        json.dump(all_recipes, all_recipes_file, ensure_ascii=False, indent=4)
                    

                    # –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –±–æ—Ç–∞ –∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    try:
                        bot.delete_message(sent_message.chat.id, sent_message.message_id)
                        bot.delete_message(message.chat.id, message.message_id)
                    except Exception as e:
                        print(f"An error occurred while deleting message: {e}")
                    
                    # –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –¥—Ä—É–≥–∏—Ö –∞—Å–ø–µ–∫—Ç–æ–≤ —Ä–µ—Ü–µ–ø—Ç–∞
                    edit_all_recipe(call)
            
            # –û–∂–∏–¥–∞–µ–º —Å–ª–µ–¥—É—é—â–µ–≥–æ —à–∞–≥–∞ - –≤–≤–æ–¥–∞ –Ω–æ–≤—ã—Ö –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
            bot.register_next_step_handler(sent_message, handle_user_input)
        else:
            bot.send_message(call.message.chat.id, f"–†–µ—Ü–µ–ø—Ç {recipe_name} –Ω–µ –Ω–∞–π–¥–µ–Ω.")
    
    except Exception as e:
        print(f"An error occurred: {e}")

#5 —ç—Ç–∞–∂
@bot.callback_query_handler(func=lambda call: call.data.startswith('edit_all_recipe_instructions:'))
def edit_all_recipe_instructions(call):
    try:
        bot.delete_message(call.message.chat.id, call.message.message_id)
        # –ü–æ–ª—É—á–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ —Ä–µ—Ü–µ–ø—Ç–∞ –∏–∑ callback_data
        global recipe_name
        
        # –û—Ç–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª —Å —Ä–µ—Ü–µ–ø—Ç–∞–º–∏ –¥–ª—è —á—Ç–µ–Ω–∏—è
        with open(all_recipes_file_path, 'r', encoding='utf-8') as all_recipes_file:
            all_recipes = json.load(all_recipes_file)
        
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤—ã–±—Ä–∞–Ω–Ω–æ–º —Ä–µ—Ü–µ–ø—Ç–µ
        recipe_info = all_recipes.get(recipe_name)
        
        if recipe_info:
            current_instructions_str = f"–ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å:\n"
            current_instructions_str += f"'—á–∏—Å–ª–æ') - —É–¥–∞–ª–µ–Ω–∏–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ–¥ –Ω–æ–º–µ—Ä–æ–º '—á–∏—Å–ª–æ'\n"
            current_instructions_str += f"'—á–∏—Å–ª–æ') '–ª—é–±–æ–π —Ç–µ–∫—Å—Ç' - –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ–¥ –Ω–æ–º–µ—Ä–æ–º '—á–∏—Å–ª–æ' —Å —Ç–µ–∫—Å—Ç–æ–º '–ª—é–±–æ–π —Ç–µ–∫—Å—Ç'\n"
            for instructions, quantity in recipe_info.get('instructions', {}).items():
                current_instructions_str += f"{instructions}) {quantity}\n"

            # –ó–∞—Ç–µ–º –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ –≤–≤–æ–¥ –Ω–æ–≤—ã—Ö –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π
            sent_message = bot.send_message(call.message.chat.id, current_instructions_str + "\n–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ (–∫–∞–∂–¥–∞—è —Å –Ω–æ–≤–æ–π —Å—Ç—Ä–æ–∫–∏):")


            # –û–∂–∏–¥–∞–µ–º –æ—Ç–≤–µ—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            @bot.message_handler(func=lambda message: message.chat.id == call.message.chat.id)
            def handle_user_input(message):
                if message.text:
                    new_instruction = message.text.strip().split('\n')
                    
                    # –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã —Ä–µ—Ü–µ–ø—Ç–∞
                    updated_instruction = {}
                    delete = []
                    for instruction in new_instruction:
                        instruction_stripped = instruction.strip()
                        instruction_split = instruction_stripped.split(')')
                        if len(instruction_split) == 2 and instruction_split[1] == '':
                            delete.append(instruction_split[0])
                        elif len(instruction_split) >= 2:
                            instruction_name = str(instruction_split[0])
                            quantity = instruction_split[-1]
                            updated_instruction[instruction_name] = quantity
                        else:
                            bot.send_message(call.message.chat.id, f"–û—à–∏–±–∫–∞: –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –≤–≤–æ–¥–∞ –¥–ª—è –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–∞: {instruction}. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ñ–æ—Ä–º–∞—Ç '–∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç - –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ'")
                    
                    # –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã —Ä–µ—Ü–µ–ø—Ç–∞
                    if updated_instruction:
                        recipe_info['instructions'].update(updated_instruction)
                    for a in delete:
                        if a in recipe_info['instructions']:
                            del recipe_info['instructions'][a]

                        
                    # –ü–µ—Ä–µ–∑–∞–ø–∏—Å—ã–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –≤ —Ñ–∞–π–ª–µ
                    with open(all_recipes_file_path, 'w', encoding='utf-8') as all_recipes_file:
                        json.dump(all_recipes, all_recipes_file, ensure_ascii=False, indent=4)
                    

                    # –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –±–æ—Ç–∞ –∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    try:
                        bot.delete_message(sent_message.chat.id, sent_message.message_id)
                        bot.delete_message(message.chat.id, message.message_id)
                    except Exception as e:
                        print(f"An error occurred while deleting message: {e}")
                    
                    # –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –¥—Ä—É–≥–∏—Ö –∞—Å–ø–µ–∫—Ç–æ–≤ —Ä–µ—Ü–µ–ø—Ç–∞
                    edit_all_recipe(call)
            
            # –û–∂–∏–¥–∞–µ–º —Å–ª–µ–¥—É—é—â–µ–≥–æ —à–∞–≥–∞ - –≤–≤–æ–¥–∞ –Ω–æ–≤—ã—Ö –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
            bot.register_next_step_handler(sent_message, handle_user_input)
        else:
            bot.send_message(call.message.chat.id, f"–†–µ—Ü–µ–ø—Ç {recipe_name} –Ω–µ –Ω–∞–π–¥–µ–Ω.")
    
    except Exception as e:
        print(f"An error occurred: {e}")



#2 —ç—Ç–∞–∂
@bot.callback_query_handler(func=lambda call: call.data == 'created_recipe')
def created_recipe(call):
    try:
        bot.delete_message(call.message.chat.id, call.message.message_id)
        # –ü–æ–ª—É—á–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ —Ä–µ—Ü–µ–ø—Ç–∞ –∏–∑ callback_data
        global recipe_name

        
        sent_message = bot.send_message(call.message.chat.id, f"–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –¥–ª—è —Ä–µ—Ü–µ–ø—Ç–∞ {recipe_name}:")
        
        # –û–∂–∏–¥–∞–µ–º –æ—Ç–≤–µ—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        @bot.message_handler(func=lambda message: message.chat.id == call.message.chat.id)
        def handle_user_input(message):
            if message.text:
                new_recipe_name = message.text.strip()
                
                with open(all_recipes_file_path, 'r', encoding='utf-8') as all_recipes_file:
                    all_recipes = json.load(all_recipes_file)
               
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ä–µ—Ü–µ–ø—Ç —Å —Ç–∞–∫–∏–º –Ω–æ–≤—ã–º –Ω–∞–∑–≤–∞–Ω–∏–µ–º
                if new_recipe_name in all_recipes:
                    bot.send_message(call.message.chat.id, f"–†–µ—Ü–µ–ø—Ç —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º {new_recipe_name} —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –¥—Ä—É–≥–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ.")
                    return
                
                new_recipe = {
                            "ingredients": {},
                            "instructions": {},
                            "time": ''
                }
                
                all_recipes[new_recipe_name] = new_recipe

                with open(all_recipes_file_path, 'w', encoding='utf-8') as all_recipes_file:
                    json.dump(all_recipes, all_recipes_file, ensure_ascii=False, indent=4)
                    
                # –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –±–æ—Ç–∞ –∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                try:
                    bot.delete_message(sent_message.chat.id, sent_message.message_id)
                    bot.delete_message(message.chat.id, message.message_id)
                except Exception as e:
                    print(f"An error occurred while deleting message: {e}")
    
                global recipe_name
                recipe_name = new_recipe_name
                edit_all_recipe(call)

            else:
                bot.send_message(call.message.chat.id, f"–†–µ—Ü–µ–ø—Ç —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º {recipe_name} –Ω–µ –Ω–∞–π–¥–µ–Ω.")
                
        # –û–∂–∏–¥–∞–µ–º —Å–ª–µ–¥—É—é—â–µ–≥–æ —à–∞–≥–∞ - –≤–≤–æ–¥–∞ –Ω–æ–≤–æ–≥–æ –Ω–∞–∑–≤–∞–Ω–∏—è —Ä–µ—Ü–µ–ø—Ç–∞
        bot.register_next_step_handler(sent_message, handle_user_input)
        
    except Exception as e:
        print(f"An error occurred: {e}")








def get_user_input(message):
    # –§—É–Ω–∫—Ü–∏—è –±—É–¥–µ—Ç –æ–∂–∏–¥–∞—Ç—å –≤–≤–æ–¥ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
    user_input = message.text
    return user_input
